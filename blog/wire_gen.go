// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"blog/internal/dao"
	"blog/internal/ioc"
	"blog/internal/repository"
	"blog/internal/service"
	"blog/internal/web"
	"github.com/gin-gonic/gin"
)

// Injectors from wire.go:

func InitWebServer() *gin.Engine {
	v := ioc.InitGinMiddlewares()
	loggerV1 := ioc.InitLogger()
	db := ioc.InitDB(loggerV1)
	userDAO := dao.NewUserDAO(db)
	userRepository := repository.NewUserRepository(userDAO)
	userService := service.NewUserService(userRepository)
	userHandler := web.NewUserHandler(userService)
	postDAO := dao.NewPostDAO(db)
	postRepository := repository.NewPostRepository(postDAO, userDAO)
	postService := service.NewPostService(postRepository)
	postHandler := web.NewPostHandler(postService, loggerV1)
	commentDAO := dao.NewCommentDAO(db)
	commentRepository := repository.NewCommentRepository(commentDAO, postDAO, userDAO)
	commentService := service.NewCommentService(commentRepository, postRepository)
	commentHandler := web.NewCommentHandler(commentService)
	engine := ioc.InitWebServer(v, userHandler, postHandler, commentHandler)
	return engine
}
